"0","# R/dog_api.R"
"0",""
"0","#– load required packages"
"0","library(httr)"
"0","library(jsonlite)"
"2","Warning:"
"2"," package ‘jsonlite’ was built under R version 4.3.3
"
"0","library(tibble)"
"0",""
"0","#’ @title Get all breeds"
"0","#’ @return tibble with columns: breed, sub_breeds (list-column)"
"0","get_all_breeds <- function() {"
"0","  res <- GET(""https://dog.ceo/api/breeds/list/all"")"
"0","  stop_for_status(res)"
"0","  parsed <- content(res, as = ""parsed"", simplifyVector = TRUE)"
"0","  # parsed$message is a named list: names=breeds, values=character vectors of sub-breeds"
"0","  tibble("
"0","    breed      = names(parsed$message),"
"0","    sub_breeds = unname(parsed$message)"
"0","  )"
"0","}"
"0",""
"0","#’ @title Get sub-breeds for one breed"
"0","#’ @param breed Character, e.g. ""hound"""
"0","#’ @return character vector of sub-breeds (may be length 0)"
"0","get_sub_breeds <- function(breed) {"
"0","  all_b <- get_all_breeds()"
"0","  sb <- all_b$sub_breeds[all_b$breed == breed]"
"0","  if (length(sb) == 0) return(character(0))"
"0","  sb[[1]]"
"0","}"
"0",""
"0","#’ @title Fetch one random image for a breed"
"0","#’ @param breed Character"
"0","#’ @return tibble(url)"
"0","get_random_image_by_breed <- function(breed) {"
"0","  url <- sprintf(""https://dog.ceo/api/breed/%s/images/random"", breed)"
"0","  res <- GET(url)"
"0","  stop_for_status(res)"
"0","  parsed <- content(res, as = ""parsed"", simplifyVector = TRUE)"
"0","  tibble(url = parsed$message)"
"0","}"
"0",""
"0","#’ @title Fetch one random image for a sub-breed"
"0","#’ @param breed Character"
"0","#’ @param sub_breed Character"
"0","#’ @return tibble(url)"
"0","get_random_image_by_sub_breed <- function(breed, sub_breed) {"
"0","  url <- sprintf(""https://dog.ceo/api/breed/%s/%s/images/random"", breed, sub_breed)"
"0","  res <- GET(url)"
"0","  stop_for_status(res)"
"0","  parsed <- content(res, as = ""parsed"", simplifyVector = TRUE)"
"0","  tibble(url = parsed$message)"
"0","}"
"0",""
"0","#’ @title Fetch n random images for a breed"
"0","#’ @param breed Character"
"0","#’ @param n     Integer"
"0","#’ @return tibble(url)"
"0","get_n_images_by_breed <- function(breed, n) {"
"0","  url <- sprintf(""https://dog.ceo/api/breed/%s/images/random/%s"", breed, n)"
"0","  res <- GET(url)"
"0","  stop_for_status(res)"
"0","  parsed <- content(res, as = ""parsed"", simplifyVector = TRUE)"
"0","  tibble(url = unlist(parsed$message))"
"0","}"
"0",""
"0","#’ @title Fetch n totally random images"
"0","#’ @param n Integer"
"0","#’ @return tibble(url)"
"0","get_n_random_images <- function(n) {"
"0","  url <- sprintf(""https://dog.ceo/api/breeds/image/random/%s"", n)"
"0","  res <- GET(url)"
"0","  stop_for_status(res)"
"0","  parsed <- content(res, as = ""parsed"", simplifyVector = TRUE)"
"0","  tibble(url = unlist(parsed$message))"
"0","}"
"0",""
